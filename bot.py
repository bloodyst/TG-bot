import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import asyncio
from datetime import datetime
from fastapi import FastAPI
import uvicorn
import threading
import os

# –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
app = FastAPI()

@app.get("/")
def home():
    return {"status": "Bot is running!"}

def run_webserver():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    uvicorn.run(
        app,
        host="0.0.0.0",
        port=int(os.getenv("PORT", 10000)),  # Render —Å–∞–º –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ—Ä—Ç
        log_level="error"
    )

bot = Bot(token="7247653323:AAFrKE9L1hYCloZTHm32KCrqoeB4fwGBmoU")
dp = Dispatcher()

# –î–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
players = {}
LOCATIONS = {
    "–õ–µ—Å": {"–¥–µ—Ä–µ–≤–æ": (5, 15), "—è–≥–æ–¥—ã": (1, 5)},
    "–®–∞—Ö—Ç–∞": {"–∫–∞–º–µ–Ω—å": (10, 20), "—Ä—É–¥–∞": (3, 8)},
    "–ë–æ–ª–æ—Ç–æ": {"–≥—Ä–∏–±—ã": (2, 7), "–≥—Ä—è–∑—å": (1, 10)}
}

IMAGE_URLS = {
    "farm": "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNWl3OTlkczV2enNqYmw3ZzkzOG1tNzBrNTlyNnczcHBqdnd3MXd6cCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/XElbX0BRDLvfh3aCtb/giphy.gif",
    "fight_start": "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdGt1bG53aWk1eWJpMXE2N2l5Nzl4ZDJwajc4OWRnNWZxYmxuamZhZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ITbG1hODpTGwrVaAhl/giphy.gif",
    "fight_win": "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHZ0eGFkbnJuaGJpa3B5NGF5cjE4OWF5NXIzcDNta3M1NWtqY3lyNCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/xwPacBOcCu2z5ttwnw/giphy.gif",
    "fight_lose": "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExejdzNW9icjdjYXQ3MGY3ZWNsY2w1OGVrOWpqODRhaGwzeDExcDEyZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ateoIuZ8jvhyOUFwoD/giphy.gif",
    "boss_start": "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExc2pzaHVoMWhtbHl6eGFqNG5nN2lxdjZuaXdtcmR6OWd4OXZ4cmgzYSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/2Pk9newN8fkbu/giphy.gif",  # –ó–∞–º–µ–Ω–∏–ª –Ω–∞ —Ä–∞–±–æ—Ç–∞—é—â—É—é –≥–∏—Ñ–∫—É
    "boss_win": "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExamR5bjJrNzJvdXFoYWxmeDUyb2djcHh3azExZ3docmEwOWltdnZyaSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l0HlwGH5lFhL5YAxy/giphy.gif",  # –ó–∞–º–µ–Ω–∏–ª –Ω–∞ —Ä–∞–±–æ—Ç–∞—é—â—É—é –≥–∏—Ñ–∫—É
    "boss_lose": "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExem5jZHh1NmZ5Y2g4cm56d3J1cHUwMjJ3ZGFwdnkwb216d3hkcWJlcCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/adhayxttIGZuU/giphy.gif",  # –ó–∞–º–µ–Ω–∏–ª –Ω–∞ —Ä–∞–±–æ—Ç–∞—é—â—É—é –≥–∏—Ñ–∫—É
    "inventory": "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExcGZ3dHVjanllNWxmOTBjbnFqaGdsNG01N2F5c29hNXc4MWU3ODQ2OSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l378xcbxNV5QYfygg/giphy.gifm"  # –ü—Ä–∏–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
}


class Player:
    def __init__(self, user_id):
        self.user_id = user_id
        self.level = 1
        self.exp = 0
        self.resources = {res: 0 for loc in LOCATIONS.values() for res in loc}
        self.inventory = {
            "–º–µ—á": 0,
            "–±—Ä–æ–Ω—è": 0,
            "–∑–µ–ª—å–µ": 0,
            "—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á": 0,
            "–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è": 0
        }
        self.health = 100
        self.max_health = 100
        self.location = "–õ–µ—Å"
        self.farm_count = 0
        self.fight_count = 0
        self.last_farm_time = None
        self.last_fight_time = None

    def add_exp(self, amount):
        self.exp += amount
        if self.exp >= self.level * 100:
            return self.level_up()
        return ""

    def level_up(self):
        self.level += 1
        self.exp = 0
        self.max_health += 20
        self.health = self.max_health
        return f"üéâ –¢—ã –¥–æ—Å—Ç–∏–≥ {self.level} —É—Ä–æ–≤–Ω—è! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è +20 HP!"

    def get_health_bar(self):
        filled = int(self.health / self.max_health * 10)
        return f"‚ù§Ô∏è [{'|' * filled}{'_' * (10 - filled)}] {self.health}%"


CRAFT_RECIPES = {
    "–º–µ—á": {"–¥–µ—Ä–µ–≤–æ": 5, "–∫–∞–º–µ–Ω—å": 3},
    "–±—Ä–æ–Ω—è": {"–¥–µ—Ä–µ–≤–æ": 8, "–∫–∞–º–µ–Ω—å": 5},
    "–∑–µ–ª—å–µ": {"—è–≥–æ–¥—ã": 3, "–≥—Ä–∏–±—ã": 2},
    "—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á": {"—Ä—É–¥–∞": 10, "–∑–æ–ª–æ—Ç–æ": 5},
    "–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è": {"—Ä—É–¥–∞": 15, "–∑–æ–ª–æ—Ç–æ": 8}
}


def get_main_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõ† –§–∞—Ä–º–∏—Ç—å"), KeyboardButton(text="‚öîÔ∏è –î—Ä–∞—Ç—å—Å—è")],
            [KeyboardButton(text="üëë –ë–æ—Å—Å"), KeyboardButton(text="üå≤ –õ–æ–∫–∞—Ü–∏—è")],
            [KeyboardButton(text="üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"), KeyboardButton(text="üìä –°—Ç–∞—Ç—ã")],
            [KeyboardButton(text="üîß –ö—Ä–∞—Ñ—Ç")]
        ],
        resize_keyboard=True
    )


def get_location_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üå≤ –õ–µ—Å"), KeyboardButton(text="‚õèÔ∏è –®–∞—Ö—Ç–∞")],
            [KeyboardButton(text="üêä –ë–æ–ª–æ—Ç–æ"), KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )


def get_craft_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üî® –ö—Ä–∞—Ñ—Ç –º–µ—á–∞"), KeyboardButton(text="üõ°Ô∏è –ö—Ä–∞—Ñ—Ç –±—Ä–æ–Ω–∏")],
            [KeyboardButton(text="üß™ –ö—Ä–∞—Ñ—Ç –∑–µ–ª—å—è"), KeyboardButton(text="‚öîÔ∏è –ö—Ä–∞—Ñ—Ç —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –º–µ—á–∞")],
            [KeyboardButton(text="üêâ –ö—Ä–∞—Ñ—Ç –¥—Ä–∞–∫–æ–Ω—å–µ–π –±—Ä–æ–Ω–∏"), KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )


def check_cooldown(player, action):
    now = datetime.now()
    if action == "farm":
        if player.farm_count >= 3:
            if player.last_farm_time and (now - player.last_farm_time).seconds < 3:
                return f"‚è≥ –§–∞—Ä–º –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ! –ñ–¥–∏ {3 - (now - player.last_farm_time).seconds} —Å–µ–∫."
            player.farm_count = 0
        player.last_farm_time = now
        player.farm_count += 1
    elif action == "fight":
        if player.fight_count >= 2:
            if player.last_fight_time and (now - player.last_fight_time).seconds < 10:
                return f"‚è≥ –î—Ä–∞–∫–∏ –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ! –ñ–¥–∏ {10 - (now - player.last_fight_time).seconds} —Å–µ–∫."
            player.fight_count = 0
        player.last_fight_time = now
        player.fight_count += 1
    return None


@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    if user_id not in players:
        players[user_id] = Player(user_id)
    await message.answer(
        f"üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!\n"
        f"–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: üå≤ {players[user_id].location}\n"
        f"{players[user_id].get_health_bar()}",
        reply_markup=get_main_kb()
    )


@dp.message(lambda msg: msg.text == "üîß –ö—Ä–∞—Ñ—Ç")
async def open_craft(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —á—Ç–æ –∫—Ä–∞—Ñ—Ç–∏—Ç—å:", reply_markup=get_craft_kb())


@dp.message(lambda msg: msg.text in ["üî® –ö—Ä–∞—Ñ—Ç –º–µ—á–∞", "üõ°Ô∏è –ö—Ä–∞—Ñ—Ç –±—Ä–æ–Ω–∏", "üß™ –ö—Ä–∞—Ñ—Ç –∑–µ–ª—å—è",
                                     "‚öîÔ∏è –ö—Ä–∞—Ñ—Ç —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –º–µ—á–∞", "üêâ –ö—Ä–∞—Ñ—Ç –¥—Ä–∞–∫–æ–Ω—å–µ–π –±—Ä–æ–Ω–∏"])
async def handle_craft(message: types.Message):
    user_id = message.from_user.id
    player = players.get(user_id)

    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /start")
        return

    item_map = {
        "üî® –ö—Ä–∞—Ñ—Ç –º–µ—á–∞": "–º–µ—á",
        "üõ°Ô∏è –ö—Ä–∞—Ñ—Ç –±—Ä–æ–Ω–∏": "–±—Ä–æ–Ω—è",
        "üß™ –ö—Ä–∞—Ñ—Ç –∑–µ–ª—å—è": "–∑–µ–ª—å–µ",
        "‚öîÔ∏è –ö—Ä–∞—Ñ—Ç —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –º–µ—á–∞": "—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á",
        "üêâ –ö—Ä–∞—Ñ—Ç –¥—Ä–∞–∫–æ–Ω—å–µ–π –±—Ä–æ–Ω–∏": "–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è"
    }

    item = item_map.get(message.text)
    if not item:
        await message.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç")
        return

    recipe = CRAFT_RECIPES.get(item, {})
    missing = []

    for res, needed in recipe.items():
        if player.resources.get(res, 0) < needed:
            missing.append(f"{res} (–Ω—É–∂–Ω–æ {needed}, –µ—Å—Ç—å {player.resources.get(res, 0)})")

    if missing:
        await message.answer(
            f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è {item}:\n" + "\n".join(missing),
            reply_markup=get_craft_kb()
        )
    else:
        for res, needed in recipe.items():
            player.resources[res] -= needed
        player.inventory[item] += 1

        await message.answer(
            f"üéâ –¢—ã —Å–∫—Ä–∞—Ñ—Ç–∏–ª {item}!\n"
            f"–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è {player.inventory[item]} —à—Ç.",
            reply_markup=get_main_kb()
        )


@dp.message(lambda msg: msg.text == "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
async def show_inventory(message: types.Message):
    user_id = message.from_user.id
    player = players.get(user_id)

    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /start", reply_markup=ReplyKeyboardRemove())
        return

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        items_text = "üîÆ –ü—Ä–µ–¥–º–µ—Ç—ã:\n"
        has_items = False
        for item, count in player.inventory.items():
            if count > 0:
                items_text += f"‚Ä¢ {item.capitalize()}: {count} —à—Ç.\n"
                has_items = True

        if not has_items:
            items_text += "–ü—É—Å—Ç–æ\n"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤
        resources_text = "\nüì¶ –†–µ—Å—É—Ä—Å—ã:\n"
        has_resources = False
        for resource, count in player.resources.items():
            if count > 0:
                resources_text += f"‚Ä¢ {resource.capitalize()}: {count} —à—Ç.\n"
                has_resources = True

        if not has_resources:
            resources_text += "–ü—É—Å—Ç–æ\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=IMAGE_URLS["inventory"],
            caption=items_text + resources_text,
            reply_markup=get_main_kb()
        )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {e}")
        await message.answer("üîß –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@dp.message(lambda msg: msg.text in ["üõ† –§–∞—Ä–º–∏—Ç—å", "‚öîÔ∏è –î—Ä–∞—Ç—å—Å—è", "üëë –ë–æ—Å—Å", "üìä –°—Ç–∞—Ç—ã", "üå≤ –õ–æ–∫–∞—Ü–∏—è"])
async def handle_actions(message: types.Message):
    user_id = message.from_user.id
    player = players.get(user_id)

    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /start", reply_markup=ReplyKeyboardRemove())
        return

    action = message.text

    if action == "üõ† –§–∞—Ä–º–∏—Ç—å":
        cooldown_msg = check_cooldown(player, "farm")
        if cooldown_msg:
            await message.answer(cooldown_msg)
            return

        await bot.send_animation(
            chat_id=message.chat.id,
            animation=IMAGE_URLS["farm"],
            caption=f"üõ† –¢—ã —Ñ–∞—Ä–º–∏—à—å –≤ {player.location}..."
        )

        resources = LOCATIONS[player.location]
        resource = random.choice(list(resources.keys()))
        amount = random.randint(*resources[resource])
        player.resources[resource] += amount
        level_up_msg = player.add_exp(5)

        response = (
            f"üõ† –¢—ã –¥–æ–±—ã–ª {amount} {resource}!\n"
            f"üì¶ –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è: {player.resources[resource]} {resource}\n"
            f"üî• +5 –æ–ø—ã—Ç–∞!\n\n"
            f"{player.get_health_bar()}"
        )

        if level_up_msg:
            response += f"\n\n{level_up_msg}"

    elif action == "‚öîÔ∏è –î—Ä–∞—Ç—å—Å—è":
        cooldown_msg = check_cooldown(player, "fight")
        if cooldown_msg:
            await message.answer(cooldown_msg)
            return

        await bot.send_animation(
            chat_id=message.chat.id,
            animation=IMAGE_URLS["fight_start"],
            caption="‚öîÔ∏è –¢—ã –≤—Å—Ç—É–ø–∞–µ—à—å –≤ –±–æ–π!"
        )

        enemy_hp = random.randint(10, 30)
        player_dmg = random.randint(5, 15) + (player.inventory["–º–µ—á"] * 5) + (player.inventory["—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á"] * 15)
        enemy_dmg = random.randint(3, 10)

        response = (
            f"‚öîÔ∏è –ë–∏—Ç–≤–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£ –≤—Ä–∞–≥–∞ {enemy_hp} HP.\n"
            f"–¢—ã –Ω–∞–Ω–æ—Å–∏—à—å {player_dmg} —É—Ä–æ–Ω–∞.\n\n"
            f"{player.get_health_bar()}"
        )

        while enemy_hp > 0 and player.health > 0:
            enemy_hp -= player_dmg
            if enemy_hp <= 0:
                await bot.send_animation(
                    chat_id=message.chat.id,
                    animation=IMAGE_URLS["fight_win"],
                    caption="‚úÖ –¢—ã –ø–æ–±–µ–¥–∏–ª –≤—Ä–∞–≥–∞!"
                )
                level_up_msg = player.add_exp(15)
                loot = random.choice(["–º–µ—á", "–±—Ä–æ–Ω—è", "–∑–µ–ª—å–µ"])
                player.inventory[loot] += 1
                response += f"\n\nüéÅ –ü–æ–ª—É—á–µ–Ω–æ: 1 {loot}!\nüî• +15 –æ–ø—ã—Ç–∞!"
                if level_up_msg:
                    response += f"\n\n{level_up_msg}"
                break

            player.health -= max(1, enemy_dmg - player.inventory["–±—Ä–æ–Ω—è"] * 3 - player.inventory["–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è"] * 5)
            if player.health <= 0:
                player.health = 1
                await bot.send_animation(
                    chat_id=message.chat.id,
                    animation=IMAGE_URLS["fight_lose"],
                    caption="üíÄ –¢—ã –µ–ª–µ –≤—ã–∂–∏–ª..."
                )
                response += "\n\n–í—Ä–∞–≥ —Ç–µ–±—è –ø–æ—á—Ç–∏ –¥–æ–±–∏–ª."
                break

    elif action == "üëë –ë–æ—Å—Å":
        if player.level < 3:
            await message.answer("‚ùå –¢—ã —Å–ª–∏—à–∫–æ–º —Å–ª–∞–± –¥–ª—è –±–æ—Å—Å–∞! –ù–∞–±–µ—Ä–∏ 3+ —É—Ä–æ–≤–µ–Ω—å.")
            return

        cooldown_msg = check_cooldown(player, "fight")
        if cooldown_msg:
            await message.answer(cooldown_msg)
            return

        await bot.send_animation(
            chat_id=message.chat.id,
            animation=IMAGE_URLS["boss_start"],
            caption="üëπ –ü–æ—è–≤–∏–ª—Å—è –ë–û–°–°! –û–Ω —Å—Ç—Ä–∞—à–Ω—ã–π!"
        )

        boss_hp = 100
        player_dmg = random.randint(10, 25) + (player.inventory["–º–µ—á"] * 5) + (player.inventory["—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á"] * 15)
        boss_dmg = random.randint(15, 30)

        response = (
            f"üëπ –ë–æ—Å—Å: 100 HP\n"
            f"–¢—ã –Ω–∞–Ω–æ—Å–∏—à—å {player_dmg} —É—Ä–æ–Ω–∞.\n\n"
            f"{player.get_health_bar()}"
        )

        while boss_hp > 0 and player.health > 0:
            boss_hp -= player_dmg
            if boss_hp <= 0:
                await bot.send_animation(
                    chat_id=message.chat.id,
                    animation=IMAGE_URLS["boss_win"],
                    caption="üéñ –¢—ã –£–ë–ò–õ –ë–û–°–°–ê!"
                )
                level_up_msg = player.add_exp(50)
                player.resources["–∑–æ–ª–æ—Ç–æ"] += 50
                response += "\n\nüí∞ +50 –∑–æ–ª–æ—Ç–∞!\nüî• +50 –æ–ø—ã—Ç–∞!"
                if level_up_msg:
                    response += f"\n\n{level_up_msg}"
                break

            player.health -= max(1, boss_dmg - player.inventory["–±—Ä–æ–Ω—è"] * 3 - player.inventory["–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è"] * 5)
            if player.health <= 0:
                player.health = 1
                await bot.send_animation(
                    chat_id=message.chat.id,
                    animation=IMAGE_URLS["boss_lose"],
                    caption="‚ò†Ô∏è –ë–æ—Å—Å —Ç–µ–±—è —Ä–∞–∑–º–∞–∑–∞–ª..."
                )
                response += "\n\n–ï–ª–µ –≤—ã–∂–∏–ª."
                break

    elif action == "üå≤ –õ–æ–∫–∞—Ü–∏—è":
        await message.answer("–í—ã–±–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é:", reply_markup=get_location_kb())
        return

    elif action == "üìä –°—Ç–∞—Ç—ã":
        response = (
            f"üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            f"üìç –õ–æ–∫–∞—Ü–∏—è: {player.location}\n"
            f"{player.get_health_bar()}\n"
            f"üìà –£—Ä–æ–≤–µ–Ω—å: {player.level}\n"
            f"üî• –û–ø—ã—Ç: {player.exp}/{player.level * 100}\n"
            f"üó°Ô∏è –£—Ä–æ–Ω: {10 + player.inventory['–º–µ—á'] * 5 + player.inventory['—ç–ø–∏—á–µ—Å–∫–∏–π –º–µ—á'] * 15}\n"
            f"üõ°Ô∏è –ó–∞—â–∏—Ç–∞: {player.inventory['–±—Ä–æ–Ω—è'] * 3 + player.inventory['–¥—Ä–∞–∫–æ–Ω—å—è –±—Ä–æ–Ω—è'] * 5}"
        )

    await message.answer(response, reply_markup=get_main_kb())


@dp.message(lambda msg: msg.text in ["üå≤ –õ–µ—Å", "‚õèÔ∏è –®–∞—Ö—Ç–∞", "üêä –ë–æ–ª–æ—Ç–æ", "üîô –ù–∞–∑–∞–¥"])
async def handle_locations(message: types.Message):
    user_id = message.from_user.id
    player = players.get(user_id)

    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /start")
        return

    if message.text == "üîô –ù–∞–∑–∞–¥":
        await message.answer("–ú–µ–Ω—é:", reply_markup=get_main_kb())
        return

    player.location = message.text.split()[1]
    await message.answer(
        f"–¢—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –≤ {player.location}!",
        reply_markup=get_main_kb()
    )


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
